{"version":3,"sources":["logo.svg","components/CommentComponent.js","components/CommentList.js","components/RedditTextComponent.js","components/TranslationComponent.js","components/Article.js","components/HeaderComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Comment","props","console","log","commentData","Card","className","CardBody","href","permalink","author","body","CommentList","useState","comments","setComments","maxComments","setMaxComments","useEffect","fetch","commentsURL","then","res","status","json","data","children","commentArray","i","length","push","map","currComment","Button","onClick","RedditText","state","showComments","parts","this","text","split","renderText","Component","Translation","pinyinArray","require","pinyin","String","join","Article","isOpen","setIsOpen","setShowComments","subreddit","article","id","popoverItems","itemClass","window","getSelection","CardHeader","title","style","display","alignItems","justifyContent","url","target","color","Collapse","CardText","selftext","CardFooter","width","App","articles","setArticles","setSubreddit","Navbar","dark","expand","NavbarBrand","type","value","onChange","e","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+gBAAe,I,gHCyBAA,EAtBC,SAACC,GAEb,OADAC,QAAQC,IAAIF,EAAMG,aAEd,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAhB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKD,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,mBAAGE,KAAM,wBAA0BP,EAAMG,YAAYK,UAArD,SACAR,EAAMG,YAAYM,aAI1B,qBAAKJ,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACKL,EAAMG,YAAYO,eCgC5BC,EA3CK,SAACX,GAAW,IAAD,EACKY,mBAAS,IADd,mBACpBC,EADoB,KACVC,EADU,OAEDF,oBAAU,GAFT,gCAGWA,mBAAS,IAHpB,mBAGpBG,EAHoB,KAGPC,EAHO,KAK3BC,qBAAU,WACNC,MAAMlB,EAAMmB,aAAaC,MAAK,SAAAC,GACZ,KAAdA,EAAIC,OAIRD,EAAIE,OAAOH,MAAK,SAAAI,GACA,MAARA,IACJV,EAAYU,EAAK,GAAGA,KAAKC,UACzBxB,QAAQC,IAAIW,OANZZ,QAAQC,IAAI,4BAYjB,IAGH,IADA,IAAIwB,EAAe,GACVC,EAAI,EAAGA,EAAId,EAASe,QAAUD,EAAIZ,EAAaY,IACpDD,EAAaG,KAAKhB,EAASc,IAG/B,OACA,sBAAKtB,UAAU,wBAAf,UACKqB,EAAaI,KAAK,SAACC,GAChB,OAAO,cAAC,EAAD,CAAS5B,YAAa4B,EAAYP,UAE7C,qBAAKnB,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,cAAC2B,EAAA,EAAD,CAAQC,QAAS,kBAAMjB,EAAeD,EAAY,IAAlD,+BCPDmB,E,kDA1BX,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IACDmC,MAAQ,CACTC,cAAc,GAHH,E,8CAOnB,WAGI,IAFA,IACIC,EAAQC,KAAKtC,MAAMuC,KAAKC,MADb,0BAENb,EAAI,EAAGA,EAAIU,EAAMT,OAAQD,GAAK,EACnCU,EAAMV,GAAK,mBAAoBpB,KAAM8B,EAAMV,GAAhC,mBAAQ,OAASA,GAEhC,OAAOU,I,oBAGX,WACI,IAAIE,EAAOD,KAAKG,aAChB,OACI,8BACKF,Q,GAtBQG,a,SCaVC,G,OAdK,SAAC3C,GAEjB,IACI4C,EADSC,EAAQ,IACHC,CAAOC,OAAO/C,EAAMuC,OAEtC,OACI,qBAAKlC,UAAU,cAAf,SACI,qBAAKA,UAAU,SAAf,SACKuC,EAAYI,KAAK,WCElC,IAwFeC,EAxFC,SAACjD,GAAW,IAAD,EACKY,oBAAS,GADd,mBAChBsC,EADgB,KACRC,EADQ,OAEWvC,oBAAS,GAFpB,gCAGiBA,oBAAS,IAH1B,mBAGhBwB,EAHgB,KAGFgB,EAHE,KAQjBjC,EAAc,4BAA8BnB,EAAMqD,UAAY,aAAerD,EAAMsD,QAAQC,GAAK,QAEtG,OACI,qBAAKlD,UAAU,cAAf,SACI,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,CACImD,aAAc,SAAAC,GAAS,OACnB,qBAAKpD,UAAU,eAAf,SACI,cAAC,EAAD,CAAakC,KAAMmB,OAAOC,oBAHtC,SAMI,eAACvD,EAAA,EAAD,WACI,cAACwD,EAAA,EAAD,CAAYvD,UAAU,aAAtB,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACKL,EAAMsD,QAAQO,QAEnB,sBAAKxD,UAAU,iBAAiByD,MAAO,CACnCC,QAAS,OACTC,WAAY,SACZC,eAAgB,YAHpB,UAKI,mBAAG1D,KAAMP,EAAMsD,QAAQY,IAAKC,OAAO,SAAnC,SACI,cAACnC,EAAA,EAAD,CAAQoC,MAAM,aAAd,SACI,sBAAM/D,UAAU,4BAGxB,cAAC2B,EAAA,EAAD,CAAQoC,MAAM,aAAanC,QA9B5C,kBAAMkB,GAAWD,IA8BA,SACKA,EAAS,sBAAM7C,UAAU,gBAAmB,sBAAMA,UAAU,yBAK7E,eAACgE,EAAA,EAAD,CAAUnB,OAAQA,EAAlB,UACI,cAAC5C,EAAA,EAAD,UACI,cAACgE,EAAA,EAAD,UACI,cAAC,EAAD,CAAY/B,KAAMvC,EAAMsD,QAAQiB,eAIxC,eAACC,EAAA,EAAD,WACI,sBAAKnE,UAAU,MAAf,UACI,qBAAKA,UAAU,SAASyD,MAAO,CAACC,QAAS,OAAOC,WAAY,UAA5D,sBACA,qBAAK3D,UAAU,QAAQyD,MAAO,CAC1BC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAHpB,SAKI,cAACjC,EAAA,EAAD,CAAQoC,MAAM,uBAAuBnC,QAAW,kBAAMmB,GAAiBhB,IAAe0B,MAAO,CACzFW,MAAM,QADV,SAGKrC,EAAe,sBAAM/B,UAAU,gBAAmB,sBAAMA,UAAU,sBAI/E,cAACgE,EAAA,EAAD,CAAUnB,OAAQd,EAAlB,SACOA,EAAgB,cAAC,EAAD,CAAajB,YAAaA,IAAkB,0C,kBC3E9EuB,YCwCNgC,MApCf,WAAgB,IAAD,EACmB9D,mBAAS,IAD5B,mBACN+D,EADM,KACIC,EADJ,OAEqBhE,mBAAS,aAF9B,mBAENyC,EAFM,KAEKwB,EAFL,KAoBb,OAhBA5D,qBAAU,WACRC,MAAM,4BAA8BmC,EAAY,SAASjC,MAAK,SAAAC,GAC1C,KAAdA,EAAIC,OAIRD,EAAIE,OAAOH,MAAK,SAAAI,GACF,MAARA,IACFoD,EAAYpD,EAAKA,KAAKC,UACtBxB,QAAQC,IAAIsB,OANdvB,QAAQC,IAAI,cAWf,CAACmD,IAGF,sBAAKhD,UAAU,MAAf,UACE,eAACyE,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,KAApB,UACE,cAACC,EAAA,EAAD,yBAGE,uBAAOC,KAAK,OAAO7E,UAAU,QAAQ8E,MAAO9B,EAAW+B,SAAU,SAAAC,GAAC,OAAIR,EAAaQ,EAAElB,OAAOgB,aAEhG,qBAAK9E,UAAU,WAAf,SACiB,MAAZsE,EAAoBA,EAAS7C,KAAK,SAACwB,EAASgC,GAAV,OAAoB,cAAC,EAAD,CAAqBhC,QAASA,EAAQ9B,KAAM6B,UAAWA,GAAzCiC,MAA0D,SCxB1HC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e4fa583c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport {Card, CardHeader, CardBody} from 'reactstrap';\n\nconst Comment = (props) => {\n    console.log(props.commentData);\n    return (\n        <Card className=\"comment\">\n            <CardBody>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <a href={\"http://www.reddit.com\" + props.commentData.permalink}>{\n                        props.commentData.author}\n                        </a>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {props.commentData.body}\n                    </div>\n                </div>\n            </CardBody>\n        </Card>\n    );\n}\n\nexport default Comment;","import React, {Component, useState, useEffect} from 'react';\nimport {Button, Card} from 'reactstrap';\n\nimport RedditText from './RedditTextComponent';\nimport Comment from './CommentComponent';\n\nconst CommentList = (props) => {\n    const [comments, setComments] = useState([]);\n    const [count, setCount] = useState(-1);\n    const [maxComments, setMaxComments] = useState(5)\n\n    useEffect(() => {\n        fetch(props.commentsURL).then(res => {\n        if (res.status != 200) {\n            console.log(\"ERROR WITH COMMENTS\");\n            return;\n        }\n        res.json().then(data => {\n            if (data != null) {\n            setComments(data[1].data.children);\n            console.log(comments);\n            // loop through children and display up to 5 comments and then have a button that updates num_comments to more , use a hook\n            }\n        });\n        })\n        \n    }, []);\n\n    let commentArray = []\n    for (let i = 0; i < comments.length && i < maxComments; i++) {\n        commentArray.push(comments[i]);\n    }\n\n    return (\n    <div className=\"container commentList\">\n        {commentArray.map( (currComment) => {\n            return <Comment commentData={currComment.data}/>;\n        })}\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <Button onClick={() => setMaxComments(maxComments+5)}>\n                    Load More\n                </Button>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default CommentList;","import React, {Component, useState} from 'react';\nimport { Card, CardHeader, Button } from 'reactstrap';\n\nimport CommentList from './CommentList';\n\nclass RedditText extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showComments: false\n        }\n    }\n\n    renderText() {\n        let urlRegex = /(\\(https?:\\/\\/[^\\s]+)/g;\n        let parts = this.props.text.split(urlRegex); // re is a matching regular expression\n        for (let i = 1; i < parts.length; i += 2) {\n            parts[i] = <a key={'link' + i} href={parts[i]}>[Link]</a>;\n        }\n        return parts\n    }\n\n    render() {\n        let text = this.renderText()\n        return (\n            <div>\n                {text}\n            </div>\n        );\n    }\n}\n\nexport default RedditText;","import React, { Component, useState, useEffect } from 'react';\n\nimport { useLazyTranslate } from 'react-google-translate';\n\nconst Translation = (props) => {\n\n    let pinyin = require('pinyin');\n    let pinyinArray = pinyin(String(props.text));\n    \n    return (\n        <div className=\"translation\">\n            <div className=\"pinyin\">\n                {pinyinArray.join(' ')}\n            </div>\n        </div>\n    );\n}\n\nexport default Translation;","import React, {Component, useState} from 'react';\nimport {Button, Card, CardText, CardHeader, CardBody, CardTitle, CardFooter, Collapse} from 'reactstrap';\nimport RedditText from './RedditTextComponent';\nimport Images from './ImagesComponent';\nimport HighlightPop, { defaultProps } from 'react-highlight-pop';\nimport Translation from './TranslationComponent';\nimport CommentList from './CommentList';\n\nfunction decodeHtml(html) {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n}\n\nconst Article = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [hasPinyin, setHasPinyin] = useState(false);\n    const [showComments, setShowComments] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    const togglePinyin = () => setHasPinyin(!hasPinyin);\n\n    const commentsURL = 'https://www.reddit.com/r/' + props.subreddit + '/comments/' + props.article.id + '.json'\n\n    return (\n        <div className=\"article row\">\n            <div className=\"col-12\">\n                <HighlightPop\n                    popoverItems={itemClass => (\n                        <div className=\"highlightpop\">\n                            <Translation text={window.getSelection()}/>\n                        </div>\n                    )}>\n                    <Card>\n                        <CardHeader className=\"bg-warning\">\n                            <div className=\"row\">\n                                <div className=\"col-9 col-lg-10\">\n                                    {props.article.title}\n                                </div>\n                                <div className=\"col-3 col-lg-2\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'flex-end',\n                                }}>\n                                    <a href={props.article.url} target=\"_blank\">\n                                        <Button color=\"bg-primary\"> \n                                            <span className=\"fa fa-external-link\" />\n                                        </Button>\n                                    </a>\n                                    <Button color=\"bg-primary\" onClick={toggle}> \n                                        {isOpen ? <span className=\"fa fa-minus\" /> : <span className=\"fa fa-plus\" />}\n                                    </Button>\n                                </div>\n                            </div>\n                        </CardHeader>\n                        <Collapse isOpen={isOpen}>\n                            <CardBody>\n                                <CardText>\n                                    <RedditText text={props.article.selftext}/>\n                                    {/* <Images images={props.article.media_metadata}/> */}\n                                </CardText>\n                            </CardBody>\n                            <CardFooter>\n                                <div className=\"row\">\n                                    <div className=\"col-11\" style={{display: 'flex',alignItems: 'center'}}>Comments</div>\n                                    <div className=\"col-1\" style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }} > \n                                        <Button color=\"bg-primary btn-block\" onClick = {() => setShowComments(!showComments)} style={{\n                                            width:\"100%\"\n                                        }}> \n                                            {showComments ? <span className=\"fa fa-minus\" /> : <span className=\"fa fa-plus\" /> }\n                                        </Button>\n                                    </div>\n                                </div>\n                                <Collapse isOpen={showComments}>\n                                    { (showComments) ? <CommentList commentsURL={commentsURL} /> : <div></div> }\n                                </Collapse>\n                            \n                                \n                            </CardFooter>\n                        </Collapse>\n                    </Card>\n                </HighlightPop>\n                \n            </div>\n            \n        </div>\n    );\n}\n\n// element['data']['id']\n// props.article.id\n// passed to this.props from App as curr['data']\n// https://www.reddit.com/r/China_irl/comments/otg5mb.json\n// https://www.reddit.com/r/ + subreddit + '/comments/' + commentId + '.json'\n\n// NEED to pass in current base_url into props\n// base_url + '/comments/' + {props.article.id} + '.json'\n\nexport default Article;","import React, {Component} from 'react';\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, NavLink} from 'reactstrap';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar dark expand=\"md\">\n                    <NavbarBrand>\n                        translateR\n                    </NavbarBrand>\n                </Navbar>\n            </div>\n            \n        );\n    }\n}\n\nexport default Header;","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Article from './components/Article';\nimport Header from './components/HeaderComponent';\nimport { Navbar, NavbarBrand, NavItem } from 'reactstrap';\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n  const [subreddit, setSubreddit] = useState('china_irl');\n\n  useEffect(() => {\n    fetch(\"https://www.reddit.com/r/\" + subreddit + \".json\").then(res => {\n      if (res.status != 200) {\n        console.log(\"ERROR\");\n        return;\n      }\n      res.json().then(data => {\n        if (data != null) {\n          setArticles(data.data.children);\n          console.log(data);\n        }\n      });\n    })\n    \n  }, [subreddit]);\n\n  return (\n    <div className=\"App\">\n      <Navbar dark expand=\"md\">\n        <NavbarBrand>\n            translateR\n        </NavbarBrand>\n          <input type=\"text\" className=\"input\" value={subreddit} onChange={e => setSubreddit(e.target.value)}/>\n      </Navbar>\n      <div className=\"articles\">\n        { (articles != null) ? articles.map( (article, index) => <Article key={index} article={article.data} subreddit={subreddit}/> ) : '' }\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}